
* exec:
    # @TODO: merge this with mailbox.zb
    from cornerhost.safety import safeMailbox
    from strongbox import BoxView
    
    mailbox = req.get("mailbox")
    assert mailbox, "mailbox parameter is required"
    
    box = safeMailbox(user, mailbox)


<h2>confirm delete</h2>


<p><strong style="color:red">WARNING:</strong>
<strong>You are about to delete the mailbox</strong>
        <strong style="color:red">{:box.mailbox:}</strong>.<br/></strong>
<em>This will permanently discard any mail left in the box.</em></p>

* exec:
    rules = [BoxView(r) for r in box.rules]
* for rules:
    * head:
        <p style="padding-top:25px;">
        <strong>Mail for the following addresses will</strong>
        <strong style="color:red">bounce</strong>:</p>
        <ul>
    * body:
        * if virtuser == '(catchall)':
            <li><a href="user.app?action=edit_catchall&amp;domName={:domain.domain:}"><em>{:virtuser:}</em> @{:domain.domain:}</a></li>
        * el:
            <li><a href="user.app?action=edit_rule&amp;virtuser={:virtuser:}&amp;domName={:domain.domain:}">{:virtuser:}@{:domain.domain:}</a></li>
    * foot:
        </ul>
        
        <p>You can redirect mail for these addresses from the
        <a href="user.app?action=email">edit rules</a> page at any time.</p>

<p style="padding-top: 25px"><strong>Really delete this mailbox?</strong></p>

<div style="width:30%; float: left">
<form action="user.app" method="POST">
<input type="hidden" name="action" value="really_delete_box"/>
<input type="hidden" name="mailbox" value="{:mailbox:}"/>
<input type="submit" value="delete mailbox"/>
</form>
</div>

<div style="width:30%; float: left">
<form action="user.app" method="GET">
<input type="hidden" name="action" value="list_boxes"/>
<input type="submit" value="cancel"/>
</form>
</div>

<br clear="all"/>
