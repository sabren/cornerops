<?python
  from zebra import html
  from cornerhost import EmailRule
  from cornerhost.safety import safeDomain, safeEmailRule
  from strongbox import BoxView
  
  """
  @TODO: clean this up!
  it's ugly because the same template
  is being used for both add_rule, edit_rule, and edit_catchall.
  """
  domName = req.get('domName')
  assert domName, "domName parameter is required"
  d = safeDomain(user, domName)
  rule = EmailRule(domain=d, mailto=d.mailto)
  
  # ugh. this is a kludge
  # the situation is this: if you add a new rule, 
  # and no mailbox name is given, it gives an
  # error and re-shows the form. but both the
  # catchall and normal rule commands use this
  # form. So testing on "virtuser" when the
  # virtuser wasn't given causes it to show
  # the wrong form.
  #
  # I think the real fix is to break this into
  # two completely separate forms, possibly with
  # a common central widget in an include file.
  
  if (req.get("virtuser")):
      # edit rule
      what = 'rule'
      rule = safeEmailRule(d, req["virtuser"])
      action ='save rule'
  elif req.get('action') == 'save new rule':
      what = 'rule'
      action = 'save new rule'
      rule.mailto = '~'
  elif (req.get('action') == 'add_rule'):
      # add rule
      what = 'rule'
      action ='save new rule'
  else:
      # catchall rule
      what = 'catchall'
      action = 'save catchall'
    
  boxes = [BoxView(b) for b in  user.boxes]

  newmailto = rule.mailto or "someone@else.com"
  if "@" not in rule.mailto:
      newmailto = "someone@else.com"
?>
<html py:strip="True"
      xmlns:py="http://genshi.edgewall.org/" 
      xmlns:xi="http://www.w3.org/2001/XInclude"> 
<div py:match="content">

<form action="user.app" method="post">
  ${Markup(html.hidden("domName", domName))}
  
  <py:if test="rule.ID or what=='catchall'">
    <h2>edit this rule</h2>
  </py:if>
  <py:if test="not(rule.ID or what=='catchall')">
    <h2>new email rule</h2>
  </py:if>

  <py:if test="what=='rule'">
    <p>Mail for 
    ${Markup(html.text("virtuser", rule.virtuser, 'ID="virtuser" style="text-align:right"'))}@${domName} 
    should:</p>
  </py:if>
  <py:if test="what=='catchall'">
    <p>By default, mail for <b>${domName}</b> should:</p>
  </py:if>
  
  <div style="padding-left: 10px">
    ${Markup(html.radio("rule", rule.mailto=="~", "main", 'ID="rule"'))}
    go into your main cornerhost mailbox (<em>${user.username}</em>)<br/>
    
    <py:for each="b in boxes">
      ${Markup(html.radio("rule", rule.mailto==b.mailbox, b.mailbox))}
      go into mailbox: ${b.mailbox}<br/>
    </py:for>
        
    ${Markup(html.radio("rule", "@" in rule.mailto, "forward"))}
    forward to ${Markup(html.text("mailto", newmailto))}<br/>


    ${Markup(html.radio("rule", rule.mailto=='error:nouser', "bounce"))}
    bounce with a "no such user" message
  </div>
  
  <p></p>

  <input type="submit" name="action" value="${action}"/>
  ${Markup(html.hidden("oldDom", rule.domain.domain))}
  
  <py:if test="rule.ID and (what!='catchall')">
    ${Markup(html.hidden("ID", rule.ID))}
    <input style="margin-left: 20px" type="submit" name="action" value="delete rule"/>
  </py:if>
  
</form>


<script language="javascript">
  <py:if test="what=='catchall'">
    document.getElementById("rule").focus();
  </py:if>
  <py:if test="what!='catchall'">
    document.getElementById("virtuser").focus();
    document.getElementById("virtuser").select();
  </py:if>
</script>

</div>
<xi:include href="master.gen"/>
</html>
